/**
 * @file Utilit√°rio para converter uma string para um buffer de bytes.
 * @author Seu Nome <seu.email@example.com>
 * @version 2.0.0
 */

/**
 * @summary Converte uma string para um buffer de bytes (`Uint8Array`).
 *
 * @description
 * Esta fun√ß√£o converte uma string de texto para sua representa√ß√£o bin√°ria, retornando um `Uint8Array`.
 * A fun√ß√£o √© universalmente compat√≠vel, usando `Buffer` no Node.js e `TextEncoder` no navegador.
 *
 * O objeto `Buffer` do Node.js √© uma subclasse de `Uint8Array`, ent√£o o tipo de retorno
 * √© consistente e interoper√°vel entre os dois ambientes.
 *
 * @param {string} txtString - A string a ser convertida para um buffer.
 * @param {BufferEncoding} [encoding="utf-8"] - **(Apenas Node.js)** A codifica√ß√£o a ser usada.
 * **No ambiente do navegador, este par√¢metro √© ignorado e a codifica√ß√£o ser√° sempre UTF-8**,
 * devido a limita√ß√µes da API `TextEncoder`.
 *
 * @returns {Uint8Array | null} Um `Uint8Array` representando os bytes da string.
 * Retorna `null` se a entrada n√£o for uma string.
 *
 * @example
 * const buffer = bufferFromString('Ol√°, Mundo! üëã');
 *
 * // `buffer` ser√° um `Buffer` no Node.js e um `Uint8Array` no navegador,
 * // mas ambos se comportam como um Uint8Array.
 * console.log(buffer.length); // 17
 * console.log(buffer[0]); // 79 ('O')
 * console.log(buffer[12]); // 240 (primeiro byte do emoji üëã)
 */
function bufferFromString(txtString, encoding = "utf-8") {
  // 1. Valida√ß√£o de tipo: garante que a entrada √© uma string.
  if (typeof txtString !== 'string') {
    return null;
  }

  // **Ambiente Node.js:**
  if (typeof window === 'undefined') {
    // `Buffer.from` √© a forma otimizada de criar um buffer no Node.js e
    // respeita o par√¢metro `encoding`. O Buffer resultante j√° √© uma inst√¢ncia de Uint8Array.
    return Buffer.from(txtString, encoding);
  }

  // **Ambiente do Navegador:**
  // `TextEncoder` √© a API padr√£o da web para converter strings em bytes.
  // O m√©todo `.encode()` retorna diretamente um `Uint8Array`.
  return new TextEncoder().encode(txtString);
}

// ------------------------------------------------------------------------------------------------

module.exports = bufferFromString;